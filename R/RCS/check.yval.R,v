head	1.2;
access;
symbols;
locks
	rolf:1.2; strict;
comment	@# @;


1.2
date	2014.01.31.02.27.49;	author rolf;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.27.07.38.20;	author rolf;	state Exp;
branches;
next	;


desc
@Check that the y values are compatible with the
matrix Rho that determines the probability functions
of the model.
@


1.2
log
@Fixed up so that it can be sensibly called from the
command line.
@
text
@check.yval <- function(y,Rho) {
yval  <- unique(unlist(y))
fname <- as.character(sys.call(-1))[1]
if(is.na(fname)) fname <- "call from the command line"
if(is.null(row.names(Rho))) {
	yval <- as.numeric(yval)
	OK   <- all(yval%in%(1:nrow(Rho)))
	if(!OK) stop(paste("In ",fname,".  The values of \"y\" must be in ",
                     "\"1:nrow(Rho)\".\n",sep=""),call.=FALSE)
} else {
	yval <- as.character(yval)
	OK   <- all(yval%in%row.names(Rho))
	if(!OK) stop(paste("In ",fname,".  The values of \"y\" must be in ",
                     "\"row.names(Rho)\".\n",sep=""),call.=FALSE)
}
return(invisible())
}
@


1.1
log
@Initial revision
@
text
@d2 3
a4 1
yval <- unique(unlist(y))
d6 4
a9 2
	if(!all(yval%in%(1:nrow(Rho))))
		stop("Values of \"y\" must be in \"1:nrow(Rho)\".\n")
d11 4
a14 2
	if(!all(yval%in%(row.names(Rho))))
		stop("Values of \"y\" must be in \"row.names(Rho)\".\n")
@
